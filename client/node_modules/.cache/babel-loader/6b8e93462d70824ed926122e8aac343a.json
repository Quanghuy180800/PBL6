{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quang Huy\\\\Desktop\\\\CSHTTT\\\\client\\\\src\\\\components\\\\mainpages\\\\createProduct\\\\UploadImg.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport warning from \"../../../img/warning.svg\";\nimport checkic from \"../../../img/check.svg\";\n\nfunction UploadImg() {\n  const state = useContext(GlobalState);\n  const [images, setImages] = useState([]);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n  const history = useHistory();\n  const [check, setCheck] = useState(false);\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n  /* const handleDestroy = async () => {\r\n       try {\r\n           if(!isAdmin) return alert(\"You're not an admin\")\r\n           setLoading(true)\r\n           await axios.post('/api/destroy', {public_id: images.public_id}, {\r\n               headers: {Authorization: token}\r\n           })\r\n           setLoading(false)\r\n           setImages(false)\r\n       } catch (err) {\r\n           alert(err.response.data.msg)\r\n       }\r\n   }*/\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      /* const file = e.target.files[0]\r\n           if(!file) return alert(\"File not exist.\")\r\n         if(file.size > 1024 * 1024) // 1mb\r\n           return alert(\"Size too large!\")\r\n         if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n           return alert(\"File format is incorrect.\")\r\n         let formData = new FormData()\r\n       formData.append('file', file)\r\n         setLoading(true)\r\n       const res = await axios.post('/api/upload', formData, {\r\n           headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n       })\r\n       setLoading(false)*/\n      //setImages(res.data)\n\n      const files = e.target.files; //  console.log(files)\n\n      var i = 0;\n      let formData = new FormData();\n\n      for (i; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n\n      setLoading(true);\n      const res = await axios.post(`/api/uploadmany/${params.id}`, formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setCheck(true); // setImages(res.data.data[0])\n      //console.log(res.data.data)\n      //history.push('/product')\n\n      /*  for ( i; i<files.length;i++){\r\n        console.log(i)    \r\n        if(!files[i]) return alert(\"File not exist.\")\r\n          if(files[i].size > 1024 * 1024) // 1mb\r\n            return alert(files[i].name+\" \"+\"Size too large!\")\r\n              console.log(files[i].type)\r\n        if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\r\n            return alert(i+\" \"+\"File format is incorrect.\")\r\n          let formData = new FormData()\r\n        formData.append('file', files[i])\r\n          setLoading(true)\r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n        })\r\n        setLoading(false)\r\n        setImages(res.data)\r\n       console.log(res.data.url)\r\n      }*/\n    } catch (err) {// alert(err.response.data.msg)\n    }\n  };\n\n  console.log(check);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Step 2: For more images\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    id: \"files\",\n    onChange: handleUpload,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), check === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alertcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"iconup\",\n    src: checkic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Successful create new product\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alertbtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn1\",\n    to: \"/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn1 color\",\n    to: \"/create_product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Create new one\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"iconup\",\n    src: warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Please select more images\")));\n}\n\nexport default UploadImg;","map":{"version":3,"sources":["C:/Users/Quang Huy/Desktop/CSHTTT/client/src/components/mainpages/createProduct/UploadImg.js"],"names":["React","useState","useContext","useEffect","GlobalState","axios","Loading","useHistory","useParams","Link","UploadImg","state","images","setImages","isAdmin","userAPI","token","loading","setLoading","params","history","check","setCheck","styleUpload","display","handleUpload","e","preventDefault","alert","files","target","i","formData","FormData","length","append","res","post","id","headers","Authorization","err","console","log","checkic","warning"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport { GlobalState } from '../../../GlobalState'\r\nimport axios from 'axios'\r\nimport Loading from '../utils/loading/Loading'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport warning from '../../../img/warning.svg'\r\nimport checkic from '../../../img/check.svg'\r\n\r\nfunction UploadImg() {\r\n    const state = useContext(GlobalState)\r\n    const [images, setImages] = useState([])\r\n    const [isAdmin] = state.userAPI.isAdmin\r\n    \r\n    const [token] = state.token\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [check,setCheck] = useState(false)\r\n   \r\n   \r\n\r\n    const styleUpload = {\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n   /* const handleDestroy = async () => {\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n            setLoading(true)\r\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\r\n                headers: {Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }*/\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You're not an admin\")\r\n           \r\n           /* const file = e.target.files[0]\r\n                if(!file) return alert(\"File not exist.\")\r\n\r\n            if(file.size > 1024 * 1024) // 1mb\r\n                return alert(\"Size too large!\")\r\n\r\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\r\n                return alert(\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            setLoading(false)*/\r\n        //setImages(res.data)\r\n            const files = e.target.files\r\n          //  console.log(files)\r\n            var i=0;\r\n            let formData = new FormData()\r\n            \r\n            for (i; i<files.length;i++){\r\n                formData.append('files', files[i])\r\n            }\r\n            setLoading(true)\r\n            const res = await axios.post(`/api/uploadmany/${params.id}`, formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n           \r\n            setLoading(false)\r\n            setCheck(true)\r\n           // setImages(res.data.data[0])\r\n            //console.log(res.data.data)\r\n           \r\n            \r\n             //history.push('/product')\r\n          /*  for ( i; i<files.length;i++){\r\n            console.log(i)    \r\n            if(!files[i]) return alert(\"File not exist.\")\r\n\r\n            if(files[i].size > 1024 * 1024) // 1mb\r\n                return alert(files[i].name+\" \"+\"Size too large!\")\r\n\r\n                console.log(files[i].type)\r\n            if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\r\n                return alert(i+\" \"+\"File format is incorrect.\")\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', files[i])\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload', formData, {\r\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n            })\r\n            setLoading(false)\r\n            setImages(res.data)\r\n           console.log(res.data.url)\r\n        }*/\r\n        } catch (err) {\r\n           // alert(err.response.data.msg)\r\n        }\r\n    }\r\n    console.log(check)\r\n   \r\n    return(\r\n        <>\r\n        <h1 className=\"step\">Step 2: For more images</h1>\r\n           <div className=\"upload\">\r\n            <input type=\"file\" name=\"files\" id=\"files\" onChange={handleUpload} multiple/>\r\n           \r\n            \r\n        </div>\r\n\r\n        {\r\n            check === true ? \r\n            <div className=\"alertcontainer\">\r\n            <div className=\"alert\">\r\n            <img className=\"iconup\" src={checkic}/>\r\n            <h1>Successful create new product</h1>\r\n            </div>\r\n            <div className=\"alertbtn\">\r\n            <Link className=\"btn1\" to=\"/product\">Product</Link>\r\n            <Link className=\"btn1 color\" to=\"/create_product\">Create new one</Link>\r\n            </div>\r\n            </div>\r\n            :\r\n            <div className=\"alert warning\">\r\n            <img className=\"iconup\" src={warning}/>\r\n            <h1>Please select more images</h1>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadImg;"]},"metadata":{},"sourceType":"module"}