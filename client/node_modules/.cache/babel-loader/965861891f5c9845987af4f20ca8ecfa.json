{"ast":null,"code":"var _jsxFileName = \"/home/phuocnghia712/Desktop/CSHTTT/client/src/components/mainpages/createProduct/UploadImg.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport Loading from '../utils/loading/Loading';\n\nfunction UploadImg() {\n  const state = useContext(GlobalState);\n  const [images, setImages] = useState(false);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const [loading, setLoading] = useState(false);\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n\n  const handleDestroy = async () => {\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      setLoading(true);\n      await axios.post('/api/destroy', {\n        public_id: images.public_id\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setImages(false);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      const file = e.target.files[0];\n      /* const files = e.target.files\n      //  console.log(files)\n       var i=0;\n       let formData = new FormData()\n       \n       for (i; i<files.length;i++){\n           formData.append('files', files[i])\n       }\n       setLoading(true)\n       const res = await axios.post('/api/upload', formData, {\n           headers: {'content-type': 'multipart/form-data', Authorization: token}\n       })\n      \n       setLoading(false)\n      // setImages(res.data.data[0])\n      console.log(res.data.data)\n      /*  for ( i; i<files.length;i++){\n       console.log(i)    \n       if(!files[i]) return alert(\"File not exist.\")\n        if(files[i].size > 1024 * 1024) // 1mb\n           return alert(files[i].name+\" \"+\"Size too large!\")\n            console.log(files[i].type)\n       if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\n           return alert(i+\" \"+\"File format is incorrect.\")\n        let formData = new FormData()\n       formData.append('file', files[i])\n        setLoading(true)\n       const res = await axios.post('/api/upload', formData, {\n           headers: {'content-type': 'multipart/form-data', Authorization: token}\n       })\n       setLoading(false)\n       setImages(res.data)\n      console.log(res.data.url)\n      }*/\n\n      if (!file) return alert(\"File not exist.\");\n      if (file.size > 1024 * 1024) // 1mb\n        return alert(\"Size too large!\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n        return alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false); //setImages(res.data)\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    id: \"files\",\n    onChange: handleUpload,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"file_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 46\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"file_img\",\n    style: styleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: images ? images.url : '',\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"X\"))));\n}\n\nexport default UploadImg;","map":{"version":3,"sources":["/home/phuocnghia712/Desktop/CSHTTT/client/src/components/mainpages/createProduct/UploadImg.js"],"names":["React","useState","useContext","useEffect","GlobalState","axios","Loading","UploadImg","state","images","setImages","isAdmin","userAPI","token","loading","setLoading","styleUpload","display","handleDestroy","alert","post","public_id","headers","Authorization","err","response","data","msg","handleUpload","e","preventDefault","file","target","files","size","type","formData","FormData","append","res","url"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport { GlobalState } from '../../../GlobalState'\nimport axios from 'axios'\nimport Loading from '../utils/loading/Loading'\n\nfunction UploadImg() {\n    const state = useContext(GlobalState)\n    const [images, setImages] = useState(false)\n    const [isAdmin] = state.userAPI.isAdmin\n    const [token] = state.token\n    const [loading, setLoading] = useState(false)\n\n    const styleUpload = {\n        display: images ? \"block\" : \"none\"\n    }\n    const handleDestroy = async () => {\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            setLoading(true)\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\n                headers: {Authorization: token}\n            })\n            setLoading(false)\n            setImages(false)\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n    const handleUpload = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            const file = e.target.files[0]\n           /* const files = e.target.files\n          //  console.log(files)\n            var i=0;\n            let formData = new FormData()\n            \n            for (i; i<files.length;i++){\n                formData.append('files', files[i])\n            }\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n           \n            setLoading(false)\n           // setImages(res.data.data[0])\n           console.log(res.data.data)\n          /*  for ( i; i<files.length;i++){\n            console.log(i)    \n            if(!files[i]) return alert(\"File not exist.\")\n\n            if(files[i].size > 1024 * 1024) // 1mb\n                return alert(files[i].name+\" \"+\"Size too large!\")\n\n                console.log(files[i].type)\n            if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\n                return alert(i+\" \"+\"File format is incorrect.\")\n\n            let formData = new FormData()\n            formData.append('file', files[i])\n\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n            setLoading(false)\n            setImages(res.data)\n           console.log(res.data.url)\n        }*/\n\n        if(!file) return alert(\"File not exist.\")\n\n        if(file.size > 1024 * 1024) // 1mb\n            return alert(\"Size too large!\")\n\n        if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n            return alert(\"File format is incorrect.\")\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        setLoading(true)\n        const res = await axios.post('/api/upload', formData, {\n            headers: {'content-type': 'multipart/form-data', Authorization: token}\n        })\n        setLoading(false)\n        //setImages(res.data)\n\n\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }\n\n    return(\n        <>\n           <div className=\"upload\">\n            <input type=\"file\" name=\"files\" id=\"files\" onChange={handleUpload} multiple/>\n            {\n                loading ? <div id=\"file_img\"><Loading /></div>\n\n                :<div id=\"file_img\" style={styleUpload}>\n                    <img src={images ? images.url : ''} alt=\"\"/>\n                    <span onClick={handleDestroy}>X</span>\n                </div>\n            }\n            \n        </div>\n        </>\n    )\n}\n\nexport default UploadImg;"]},"metadata":{},"sourceType":"module"}